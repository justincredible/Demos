#version 400

layout(vertices = 3) out;

in vec3 v_colour[];
in vec3 v_worldpos[];
in vec3 v_position[];
in vec3 v_normal[];
in vec2 v_tex_coord[];
flat in uint v_id[];

out vec3 tc_position[];
out vec3 tc_worldpos[];
out vec3 tc_normal[];
out vec2 tc_tex_coord[];
out vec3 tc_colour[];
flat out uint tc_id[];

uniform float inner_level;
uniform float outer_level;

void main() {
    tc_id[gl_InvocationID] = v_id[gl_InvocationID];
    tc_colour[gl_InvocationID] = v_colour[gl_InvocationID];

    tc_position[gl_InvocationID] = v_position[gl_InvocationID];
    tc_worldpos[gl_InvocationID] = v_worldpos[gl_InvocationID];
    tc_normal[gl_InvocationID]   = v_normal[gl_InvocationID];
    tc_tex_coord[gl_InvocationID] = v_tex_coord[gl_InvocationID];

    gl_TessLevelOuter[0] = outer_level;
    gl_TessLevelOuter[1] = outer_level;
    gl_TessLevelOuter[2] = outer_level;
    gl_TessLevelOuter[3] = outer_level;
    gl_TessLevelInner[0] = inner_level;
    gl_TessLevelInner[1] = inner_level;
}
